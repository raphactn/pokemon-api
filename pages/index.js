import Head from 'next/head'
import { useEffect, useState } from 'react'
import api from './api/main'
import { SimpleGrid, Box, Center } from '@chakra-ui/react'
import { Image, Wrap, WrapItem, Container, Badge } from '@chakra-ui/react'
import { Text } from '@chakra-ui/react'
import { useToast, useDisclosure } from '@chakra-ui/react'
import { Input, InputGroup, Button, InputRightElement, InputLeftAddon, Flex, Divider } from '@chakra-ui/react'
import { SearchIcon, SmallCloseIcon } from '@chakra-ui/icons'
import { Tabs, TabList, TabPanels, Tab, TabPanel, Progress } from '@chakra-ui/react'
import {
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
} from '@chakra-ui/react'

export default function Home() {
  const [data, setData] = useState([]);
  const [pokemon, setPokemon] = useState([]);
  const [types, setTypes] = useState([]);
  const [stats, setStats] = useState([]);
  const [moves, setMoves] = useState([]);
  const [value, setValue] = useState('');
  const [showAll, setShowAll] = useState(false);
  const [offset, setOffSet] = useState(0);
  const { isOpen, onOpen, onClose } = useDisclosure();
  const toast = useToast();

  useEffect(() => {
    api.get(`/pokemon?limit=12&offset=${offset}`)
      .then(response => setData(response.data.results))
      .catch(err => console.log(err))
  }, [showAll, offset])


  const handleSearch = () => {
    if (value !== "") {
      api.get(`/pokemon/${value.toLocaleLowerCase()}`)
        .then(response => setData(response.data.species))
        .catch(err => ToastStatusExample())
    } else {
      return
    }
  };

  const handleClose = () => {
    setValue("")
    setShowAll(!showAll)
  }

  const handleOpenModal = (id) => {
    api.get(`/pokemon/${id}`)
      .then(response => {
        setPokemon(response.data)
        setTypes(response.data.types)
        setStats(response.data.stats)
        setMoves(response.data.moves)
      })
      .catch(err => ToastStatusExample())
  }

  const ToastStatusExample = () => {
    return (
      <Wrap>
        <WrapItem>
          {toast({
            position: 'top',
            containerStyle: {
              marginTop: 20
            },
            title: 'Pokemon não encontrado',
            status: 'error',
            isClosable: true,
          })}
        </WrapItem>

      </Wrap>
    )
  };


  return (
    <div>
      <Head>
        <title>PokéAPI - All Pokemons</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <>
        <Modal
          isCentered
          scrollBehavior={'inside'}
          onClose={onClose}
          isOpen={isOpen}
          motionPreset='slideInBottom'
        >
          <ModalOverlay />
          <ModalContent>
            <ModalCloseButton />
            <ModalBody display={'flex'} flexDirection={'column'} alignItems={'center'}>
              <Text fontWeight='bold' fontSize={'2xl'} textAlign={'center'}>#{pokemon?.id}</Text>
              <Image
                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon?.id}.png`}
                w={180}
                cursor='pointer'
                alt={pokemon?.name}
                onClick={onOpen}
              />
              <Box display={'flex'} gap={2}>
                {types.map(item =>
                  <Badge ml='1' variant='outline' p={2} borderRadius={50} colorScheme='yellow'>
                    {item.type.name}
                  </Badge>
                )}
              </Box>
              <Text fontWeight='bold' fontSize={'5xl'} textAlign={'center'}>{pokemon?.name}</Text>
              <Box>
                <Tabs>
                  <TabList justifyContent={'center'}>
                    <Tab>About</Tab>
                    <Tab>Stats</Tab>
                    <Tab>Moves</Tab>
                  </TabList>

                  <TabPanels maxH={200}>
                    <TabPanel>
                      <Flex gap={10} justifyContent={'center'} p={5} bg={'#f6f6f6'} borderRadius={20} >
                        <Box><Text>Weight: {pokemon.weight}</Text></Box>
                        <Box><Text>Height: {pokemon.height}</Text></Box>
                      </Flex>
                    </TabPanel>
                    <TabPanel>
                      {stats.map(item =>
                        <SimpleGrid columns={3} spacing={1}>
                          <Box>
                            <Text>{item.stat.name}</Text>
                          </Box>
                          <Box>
                            <Text fontWeight='bold' textAlign={'center'}>{item.base_stat}</Text>
                          </Box>
                          <Box>
                            <Progress borderRadius={50} value={item.base_stat} />
                          </Box>
                        </SimpleGrid>
                      )}
                    </TabPanel>
                    <TabPanel>
                      {moves.map(item =>
                        <Box overFlow={'auto'}>
                          <Text>{item.move.name}</Text>
                        </Box>
                      )}
                    </TabPanel>
                  </TabPanels>
                </Tabs>
              </Box>
            </ModalBody>
            <ModalFooter>
              <Button onClick={onClose}>Close</Button>
            </ModalFooter>
          </ModalContent>
        </Modal>
      </>
      <Box bg={'#ef5350'} p={'5px'}>
        <Container maxW={['100%', '70%']}>
          <Image src='https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png' w={120} alt='logo' />
        </Container>
      </Box>
      <Box minHeight={'100vh'} p={5}>
        <Center>
          <Box>
            <Image src='https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png' alt='logo' margin={10} />
            <InputGroup marginBottom={10} size='md'>
              {value ?
                <InputLeftAddon p={3} bg={'none'}>
                  <SmallCloseIcon onClick={handleClose} />
                </InputLeftAddon>
                : null}
              <Input
                pr='4.5rem'
                type={'text'}
                value={value}
                onChange={(e) => setValue(e.target.value)}
                placeholder='Find your pokemon'
              />
              <InputRightElement width='4.5rem'>
                <Button bg={'#feca1b'} h='1.75rem' size='md' onClick={handleSearch}>
                  <SearchIcon />
                </Button>
              </InputRightElement>
            </InputGroup>
          </Box>
        </Center>
        <Center>
          <SimpleGrid columns={{ base: 2, md: 4 }} spacing={[5, 10]}>
            {data.length > 1 ? data.map(item =>
              <Box borderBottom={'8px solid #feca1b'} bg={'#feca1b54'} p={5} borderRadius={10} _hover={{ transform: 'scale(1.05)', transition: 'all 350ms' }} onClick={(e) => handleOpenModal(item?.url?.substr(-3).replaceAll('/', ""))}>
                <Image
                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${item?.url?.substr(-3).replaceAll('/', "")}.png`}
                  w={150}
                  cursor='pointer'
                  alt={item?.name}
                  onClick={onOpen}
                />
                <Text fontSize='1xl' textAlign={'center'} marginTop={2}>#{item?.url?.substr(-3).replaceAll('/', "")}</Text>
                <Text fontSize='2xl' textAlign={'center'}>{item?.name}</Text>
              </Box>
            ) : (
              <Box borderBottom={'8px solid #feca1b'} bg={'#feca1b54'} p={5} borderRadius={10} _hover={{ transform: 'scale(1.1)' }} onClick={(e) => handleOpenModal(data?.url?.substr(-3).replaceAll('/', ""))}>
                <Image
                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${data?.url?.substr(-3).replaceAll('/', "")}.png`}
                  w={150}
                  cursor='pointer'
                  alt={data?.name}
                  onClick={onOpen}
                />
                <Text fontSize='1xl' textAlign={'center'} marginTop={2}>#{data?.url?.substr(-3).replaceAll('/', "")}</Text>
                <Text fontSize='2xl' textAlign={'center'}>{data?.name}</Text>
              </Box>
            )}
          </SimpleGrid>
        </Center>
      </Box>
      <Center margin={30}>
        <Box>
          <Text textAlign={'center'}>Page: {offset + 1}</Text>
          <Flex gap={5} marginTop={5}>
            <Button bg={'#feca1b54'} _hover={{ bg: '#feca1b' }} disabled={offset == 0 ? true : false} onClick={(e) => setOffSet(offset - 1)}>Previous</Button>
            <Button bg={'#feca1b54'} _hover={{ bg: '#feca1b' }} onClick={(e) => setOffSet(offset + 1)}>Next</Button>
          </Flex>
        </Box>
      </Center>
      <Box bg={'#ef5350'} textAlign={'center'} p={5} marginTop={50}>
        <Text>Development by: Raphael Caetano</Text>
      </Box>

    </div>
  )
}
